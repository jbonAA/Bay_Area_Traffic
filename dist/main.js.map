{"version":3,"sources":["webpack/bootstrap","./public/favicon.ico","./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAe,oFAAuB,yCAAyC,E;;;;;;;;;;;;ACA/E;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE+B;;AAE/B;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;AACA,SAAS;;AAET,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,2CAA2C,IAAI;AAC/C;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA,mGAAmG,MAAM,OAAO,MAAM;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,uGAAuG,MAAM,OAAO,MAAM;;AAE1H;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;;;;AAIb,SAAS;;AAET;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6EAA6E,IAAI;;AAEjF;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB,gBAAgB;;;AAGhB;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B;AAC5D,0BAA0B,qCAAqC;AAC/D,2CAA2C,KAAK,QAAQ,oBAAoB;AAC5E;;AAEA;;AAEA;AACA;;;;;AAKA;;AAEA;;;AAGA;;AAEA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default __webpack_public_path__ + \"46361fc4ffdb02213970b27b65799488.ico\";","// const CARDINAL = {\n//     180: \"N\",\n//     200: \"NNE\",\n//     225: \"NE\",\n//     245: \"ENE\",\n//     270: \"E\",\n//     290: \"ESE\",\n//     315: \"SE\",\n//     340: \"SSE\",\n//     360: \"S\",\n//     25: \"SSW\",\n//     45: \"SW\",\n//     65: \"WSW\",\n//     90:  \"W\",\n//     105: \"WNW\",\n//     125: \"NW\",\n//     145: \"NNW\",\n// }\n//due east is 90 degrees due south is 180 due west 270 due north is 360\n\nimport \"../public/favicon.ico\";\n\nclass WindDirections {\n    constructor(place) {\n        this.searchPlace = place;\n\n        if(place === \"Denver\"){\n\n        }else if(place === \"Anchorage\"){\n            this.changeMap('https://api.mapbox.com/styles/v1/mapbox/dark-v10/static/-149.8894,61.1905,10.52/800x800?access_token=pk.eyJ1IjoicHJvc2UwMDIxIiwiYSI6ImNrMzZoYWdidTAxcm8zaW82MW5jZmV6c2EifQ.PRbSpg500wqcoctnYFTIog')\n            this.allStations = [\n\n            ]\n        }else if(place === \"London\"){\n\n        }else if(place === \"Tokyo\"){\n            this.changeMap('https://api.mapbox.com/styles/v1/mapbox/dark-v10/static/139.7579,35.6854,10.52/800x800?access_token=pk.eyJ1IjoicHJvc2UwMDIxIiwiYSI6ImNrMzZoYWdidTAxcm8zaW82MW5jZmV6c2EifQ.PRbSpg500wqcoctnYFTIog')\n            this.allStations = [\n                [35.7674, 139.6753],\n                [35.7629, 139.8723],\n                [35.5991, 139.6801],\n                [35.5862, 139.8347]\n            ]\n\n        }else{\n            this.allStations = [\n                [37.875271, -122.597703],\n                [37.882356, -122.282195],\n                [37.677214, -122.495821],\n                [37.7749, -122.4194]\n            ]\n        }\n        //make allStations map bounds\n        //grab lnglat from place string\n        //this.place = [37, -122]\n        //to store search \n        this.place = new Array(1).fill()\n        this.latLng = new Array(1).fill(false)\n\n        this.windDir = []\n        this.promises = new Array(4).fill()\n        this.avg = 0\n        this.data = []\n        this.forecast = new Array(4).fill()\n        this.future1 = {}\n        this.future2 = {}\n\n        if(this.searchPlace){\n            this.getWeather(this.searchPlace)\n        }else{\n            this.getWeather()\n        }\n\n\n\n\n        this.current = {}\n\n    }\n\n    changeMap(str) {\n        let map = document.getElementById(\"map\")\n        map.style.backgroundImage = `url(${str})`\n        d3.select(\"svg\").remove()\n        \n    }\n\n    getWeather() {\n\n\n        this.allStations.forEach(async (el, i) => {\n            // console.log(el)\n            if(i === 0) {\n                let forecast = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${el[0]}&lon=${el[1]}&APPID=2e14d65f0b3ac59338aec11f11a66da5&units=imperial`)\n                forecast.json().then((res) => {\n                    // this.forecast[i] = res\n                    // console.log(res)\n                    this.future1 = res.list[0]\n                    this.future2 = res.list[4]\n                    return res\n                }).then((res) => {\n                    this.data.push(res)\n                    return res\n                })\n            }\n            let currentConditions = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${el[0]}&lon=${el[1]}&APPID=2e14d65f0b3ac59338aec11f11a66da5&units=imperial`)\n            \n            currentConditions.json().then((res) => {\n                this.forecast[i] = res\n                // this.formatData(res)\n                if(res.wind.deg){\n                    this.windDir.push(res.wind.deg)\n                }else{\n                    this.windDir.push(275)\n                }\n                this.avg += res.wind.deg\n                this.current = res\n                return res\n            }).then((res) => {\n                if(this.windDir.length === 4){\n                    this.findAvg();\n                }\n            })\n\n\n\n        })\n\n            //need to make future objects with this.forecast.forEach and it needs to have keys that correspond with the old AI\n            //elevation and period get saved into this.data\n\n                \n                //turn response to json\n\n                //look at data.properties from old API\n                //add additional info if want\n                //\n\n                //\n\n\n        \n\n\n\n        //         .then(res => res.json())\n        //         .then(data => {\n        //                 that.promises.push({\n        //                     data: data.properties\n        //             })\n        //                 that.data.push({\n        //                     elevation: data.properties.elevation,\n        //                     period: data.properties.periods[0]\n        //                 })\n        //         })\n        //         .then(() => {\n        //             this.promises.forEach((el) => {\n\n        //             let dir = el.data.periods[0].windDirection\n        //             this.forecast = el.data.periods[0]\n        //             this.future1 = el.data.periods[4]\n        //             this.future2 = el.data.periods[8]\n\n        //             this.windDir[this.promises.indexOf(el)] = CARDINAL[`${dir}`]\n                    \n        //             if (Object.values(this.windDir).length === 4){\n        //                 return this.findAvg()\n        //             }\n        //             //add periods 2-4 for future\n        //             // this.formatData(forecast)\n        //         })\n\n        //     })\n    \n\n    }\n\n    cardinalBounds(x) {\n        if (x >= 170 && x <= 190) {\n            return \"S\"\n        } else if (x > 190 && x <= 210) {\n            return \"SSW\"\n        } else if (x > 210 && x <= 237) {\n            return \"SW\"\n        } else if (x > 237 && x <= 258) {\n            return \"WSW\"\n        } else if (x > 258 && x <= 280) {\n            return \"W\"\n        } else if (x > 280 && x <= 305) {\n            return \"WNW\"\n        } else if (x > 305 && x <= 325) {\n            return \"NW\"\n        } else if (x > 325 && x <= 345) {\n            return \"NNW\"\n        } else if (x > 345 && x <= 360) {\n            //same as below for upper north bound north east\n            return \"N\"\n        } else if (x >= 0 && x <= 10) {\n            return \"N\"\n        } else if (x > 10 && x <= 30) {\n            return \"NNE\"\n        } else if (x > 30 && x <= 50) {\n            return \"NE\"\n        } else if (x > 50 && x <= 75) {\n            return \"ENE\"\n        } else if (x > 75 && x <= 100) {\n            return \"E\"\n        } else if (x > 100 && x <= 115) {\n            return \"ESE\"\n        } else if (x > 115 && x <= 130) {\n            return \"SE\"\n        } else if (x > 130 && x < 170) {\n            return \"SSE\"\n        }\n    }\n\n    findAvg() {\n        // console.log(this.windDir)\n\n        let overall = 0\n        Object.values(this.windDir).forEach((el) => {\n            overall += el\n        })\n        this.avg = overall / 4\n        \n\n        directions(this.avg, Object.values(wind.windDir))\n        \n        // console.log(this.forecast)\n        // console.log(\"forecast\")\n        // console.log(this.future1)\n        // console.log(\"future1\")\n        // console.log(this.future2)\n        // console.log(\"future2\")\n        let container = document.querySelector(\"#info\")\n\n\n        debugger\n        this.formatData(this.forecast[0])\n\n        \n        //trying to append an image for each forecast\n        //1. check if variables contain weather.main\n        //2. if not need to save into variables from res\n        //3. because I'm calling formatData with the forecast and futures\n        //I'll need to append corresponding picture somewherein that function\n\n\n        \n        let in12hours = document.createElement(\"h3\")\n        in12hours.textContent = \"12 Hours From Now\"\n        container.append(in12hours)\n\n        this.formatData(this.future1)\n\n        let in24hours = document.createElement(\"h3\")\n        in24hours.textContent = \"24 Hours From Now\"\n\n        container.append(in24hours)\n        this.formatData(this.future2)\n    }\n\n\n\n\n    // addSearch() {\n    //     let DEN = document.createElement(\"button\")\n    //     DEN.textContent = \"Denver\"\n    //     let ALA = document.createElement(\"button\")\n    //     ALA.textContent= \"Anchorage\"\n    //     let LON = document.createElement(\"button\")\n    //     LON.textContent = \"London\"\n    //     let TOK = document.createElement(\"button\")\n    //     TOK.textContent = \"Tokyo\"\n        \n    //     let root = document.getElementById(\"search\")\n    //     root.append(DEN)\n    //     root.append(ALA)\n    //     root.append(LON)\n    //     root.append(TOK)\n\n    //     let onClik = document.querySelectorAll(\"button\")\n    //     console.log(onClik)\n    //     console.log(onClik)\n    //     onClik.forEach((el) => {\n    //         el.addEventListener('click', (event) => this.createNewMap(event))\n    //     })\n    // }\n\n    createNewMap(e) {\n        e.preventDefault();\n        console.log(e.currentTarget.textContent)\n        console.log(wind)\n        wind = new WindDirections(e.currentTarget.textContent)\n        // new WindDirections(e.currentTarget.textContent)\n    }\n    \n    formatData(forecast) {\n        // debugger\n        let dirs = this.cardinalBounds(this.avg)\n        // let direct = CARDINAL[`${forecast.wind.deg}`]\n        let details = {\n            // icon: forecast.icon,\n            //grab from front file\n            Icon: forecast.weather[0].icon,\n            Temperature: ` ${Math.floor(forecast.main.temp)} F`,\n            FeelsLike: `${Math.floor(forecast.main.feels_like)} F`,\n            WindDirection: \"Approx  \" + `${dirs} ` + `${forecast.wind.speed} MPH`\n        }\n\n        console.log(details)\n\n        appendElements(details)\n    }\n\n    \n    \n\n}\n\nlet wind = new WindDirections()\n\n\n// console.log(wind)\n\n// console.log(wind.avg)\n\n\n"],"sourceRoot":""}